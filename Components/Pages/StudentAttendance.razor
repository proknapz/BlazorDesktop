@page "/StudentAttendance"
@inject NavigationManager NavigationManager

<h1>Student Attendance</h1>

<p>This component demonstrates showing data.</p>

<button class="btn btn-primary mb-3" @onclick="ShowAddClassForm">Add a Class</button>

<!-- Modal for adding a new class -->
@if (showModal)
{
        <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add Class</h5>
                        <button type="button" class="btn-close" @onclick="CloseModal"></button>
                    </div>
                    <div class="modal-body">
                        <input type="text" class="form-control form-control-sm mb-2" placeholder="Class Name"
                               @bind="newClassName" />
                        <input type="text" class="form-control form-control-sm" placeholder="Class Number"
                               @bind="newClassNumber" />
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary btn-sm" @onclick="CloseModal">Cancel</button>
                        <button class="btn btn-success btn-sm" @onclick="AddClass">Add</button>
                    </div>
                </div>
            </div>
        </div>
}

@if (classes.Any())
{
        <h6 class="mt-3">Classes:</h6>
        <div class="d-flex flex-wrap gap-2">
        @for (int i = 0; i < classes.Count; i++)
        {
                    <button class="btn btn-outline-dark btn-sm text-start" style="min-width: 160px; height: 60px;"
                            @onclick="() => NavigateToEditPage()">
                        <strong>@classes[i].Name</strong><br />
                        <small>@classes[i].Number</small>
                    </button>
        }
        </div>
}

@code {
    private bool showModal = false;
    private string newClassName = string.Empty;
    private string newClassNumber = string.Empty;

    private List<ClassEntry> classes = new();

    private class ClassEntry
    {
        public string Name { get; set; } = string.Empty;
        public string Number { get; set; } = string.Empty;
    }

    private void ShowAddClassForm()
    {
        newClassName = string.Empty;
        newClassNumber = string.Empty;
        showModal = true;
    }

    private void CloseModal()
    {
        showModal = false;
    }

    private void AddClass()
    {
        if (!string.IsNullOrWhiteSpace(newClassName))
        {
            classes.Add(new ClassEntry
                {
                    Name = newClassName,
                    Number = newClassNumber
                });
        }
        showModal = false;
    }

    private void NavigateToEditPage()
    {
        // Use NavigationManager to navigate to another page
        NavigationManager.NavigateTo("/EditClass");
    }
}
